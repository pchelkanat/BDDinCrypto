
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightEQOPrightIMPLIESOPleftXOROPleftOROPleftANDOPleftNOTOPleftLBRACRBRACleftLPARENRPARENCONST VARIABLE LBRAC RBRAC LPAREN RPAREN OROP ANDOP IMPLIESOP EQOP NOTOP ASSIGNOP COLON DOT XOROP VARORDER MAINEXP EXISTS EXISTS_EXCLstart : VARORDER COLON variableList\n             | VARIABLE ASSIGNOP expression\n             | MAINEXP COLON expression\n             | emptyexpression : LPAREN expression RPARENexpression : NOTOP expressionexpression : expression ANDOP expressionexpression : expression OROP expressionexpression : expression XOROP expressionexpression : expression IMPLIESOP expressionexpression : expression EQOP expressionexpression : EXISTS VARIABLE DOT LPAREN expression RPARENexpression : EXISTS_EXCL variableList DOT LPAREN expression RPARENexpression : VARIABLE LBRAC variableList COLON ASSIGNOP variableList RBRACexpression : VARIABLEexpression : CONSTempty :variableList : VARIABLE variableList\n                    | VARIABLE'
    
_lr_action_items = {'VARORDER':([0,],[2,]),'VARIABLE':([0,6,7,8,10,13,14,15,16,20,21,22,23,24,25,40,41,42,],[3,10,11,11,10,11,11,28,10,10,11,11,11,11,11,11,11,10,]),'MAINEXP':([0,],[4,]),'$end':([0,1,5,9,10,11,12,17,18,19,27,31,32,33,34,35,36,46,47,48,],[-17,0,-4,-1,-19,-15,-2,-16,-3,-18,-6,-7,-8,-9,-10,-11,-5,-12,-13,-14,]),'COLON':([2,4,10,19,30,],[6,8,-19,-18,39,]),'ASSIGNOP':([3,39,],[7,42,]),'LPAREN':([7,8,13,14,21,22,23,24,25,37,38,40,41,],[13,13,13,13,13,13,13,13,13,40,41,13,13,]),'NOTOP':([7,8,13,14,21,22,23,24,25,40,41,],[14,14,14,14,14,14,14,14,14,14,14,]),'EXISTS':([7,8,13,14,21,22,23,24,25,40,41,],[15,15,15,15,15,15,15,15,15,15,15,]),'EXISTS_EXCL':([7,8,13,14,21,22,23,24,25,40,41,],[16,16,16,16,16,16,16,16,16,16,16,]),'CONST':([7,8,13,14,21,22,23,24,25,40,41,],[17,17,17,17,17,17,17,17,17,17,17,]),'DOT':([10,19,28,29,],[-19,-18,37,38,]),'RBRAC':([10,19,45,],[-19,-18,48,]),'LBRAC':([11,],[20,]),'ANDOP':([11,12,17,18,26,27,31,32,33,34,35,36,43,44,46,47,48,],[-15,21,-16,21,21,-6,-7,21,21,21,21,-5,21,21,-12,-13,-14,]),'OROP':([11,12,17,18,26,27,31,32,33,34,35,36,43,44,46,47,48,],[-15,22,-16,22,22,-6,-7,-8,22,22,22,-5,22,22,-12,-13,-14,]),'XOROP':([11,12,17,18,26,27,31,32,33,34,35,36,43,44,46,47,48,],[-15,23,-16,23,23,-6,-7,-8,-9,23,23,-5,23,23,-12,-13,-14,]),'IMPLIESOP':([11,12,17,18,26,27,31,32,33,34,35,36,43,44,46,47,48,],[-15,24,-16,24,24,-6,-7,-8,-9,24,24,-5,24,24,-12,-13,-14,]),'EQOP':([11,12,17,18,26,27,31,32,33,34,35,36,43,44,46,47,48,],[-15,25,-16,25,25,-6,-7,-8,-9,-10,25,-5,25,25,-12,-13,-14,]),'RPAREN':([11,17,26,27,31,32,33,34,35,36,43,44,46,47,48,],[-15,-16,36,-6,-7,-8,-9,-10,-11,-5,46,47,-12,-13,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'empty':([0,],[5,]),'variableList':([6,10,16,20,42,],[9,19,29,30,45,]),'expression':([7,8,13,14,21,22,23,24,25,40,41,],[12,18,26,27,31,32,33,34,35,43,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> VARORDER COLON variableList','start',3,'p_start','PyBool_std_parse.py',111),
  ('start -> VARIABLE ASSIGNOP expression','start',3,'p_start','PyBool_std_parse.py',112),
  ('start -> MAINEXP COLON expression','start',3,'p_start','PyBool_std_parse.py',113),
  ('start -> empty','start',1,'p_start','PyBool_std_parse.py',114),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','PyBool_std_parse.py',140),
  ('expression -> NOTOP expression','expression',2,'p_expression_not','PyBool_std_parse.py',144),
  ('expression -> expression ANDOP expression','expression',3,'p_expression_and','PyBool_std_parse.py',148),
  ('expression -> expression OROP expression','expression',3,'p_expression_or','PyBool_std_parse.py',152),
  ('expression -> expression XOROP expression','expression',3,'p_expression_xor','PyBool_std_parse.py',156),
  ('expression -> expression IMPLIESOP expression','expression',3,'p_expression_impl','PyBool_std_parse.py',160),
  ('expression -> expression EQOP expression','expression',3,'p_expression_eqv','PyBool_std_parse.py',164),
  ('expression -> EXISTS VARIABLE DOT LPAREN expression RPAREN','expression',6,'p_expression_exists','PyBool_std_parse.py',168),
  ('expression -> EXISTS_EXCL variableList DOT LPAREN expression RPAREN','expression',6,'p_expression_exists_excl','PyBool_std_parse.py',173),
  ('expression -> VARIABLE LBRAC variableList COLON ASSIGNOP variableList RBRAC','expression',7,'p_expression_rename','PyBool_std_parse.py',178),
  ('expression -> VARIABLE','expression',1,'p_expression_var','PyBool_std_parse.py',190),
  ('expression -> CONST','expression',1,'p_expression_const','PyBool_std_parse.py',206),
  ('empty -> <empty>','empty',0,'p_empty','PyBool_std_parse.py',214),
  ('variableList -> VARIABLE variableList','variableList',2,'p_variableList','PyBool_std_parse.py',220),
  ('variableList -> VARIABLE','variableList',1,'p_variableList','PyBool_std_parse.py',221),
]
